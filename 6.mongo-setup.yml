apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-setup
  namespace: mongo-ns
data:
  1-create-db-owner.sh: |
    mongosh ${MONGO_INITDB_DATABASE} \
      --username ${MONGO_INITDB_ROOT_USERNAME} \
      --password ${MONGO_INITDB_ROOT_PASSWORD} \
      --authenticationDatabase admin \
      --eval "db.createUser({ \
        user: '${MONGO_USERNAME}', \
        pwd: '${MONGO_PASSWORD}', \
        roles: [{ \
          role: 'dbOwner', \
          db: '${MONGO_INITDB_DATABASE}' \
          }] \
        });"
  2-initiate-replica-set.sh: |
    if [ "$K8S_POD_NAME" == "mongo-0" ]; then 
        members="{_id: 0, host: 'mongo-0.mongo:27017'}"

        for id in `seq 1 $(( $(echo $K8S_REPLICAS) - 1 ))`; do
            members="${members}, {_id: $id, host: 'mongo-$id.mongo:27017'}"
        done

        while true; do
            sleep 15

            mongosh admin \
                --username ${MONGO_INITDB_ROOT_USERNAME} \
                --password ${MONGO_INITDB_ROOT_PASSWORD} \
                --eval "rs.initiate({_id: 'rs0', members: [$members]});" 2>/dev/null

            if [ $? == 0 ]; then
                break
            fi
        done
    else
        while true; do
            sleep 15

            mongosh admin \
                --username ${MONGO_INITDB_ROOT_USERNAME} \
                --password ${MONGO_INITDB_ROOT_PASSWORD} \
                --eval "db.getMongo().setReadPref("primaryPreferred");" 2>/dev/null

            if [ $? == 0 ]; then
                break
            fi
        done
    fi &
